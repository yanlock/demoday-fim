# Generated by Django 2.2.4 on 2019-08-17 21:16

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'O nome de usuário só pode conter letras e digitos.', 'invalid')], verbose_name='Nome de usuário')),
                ('nome_completo', models.CharField(blank=True, max_length=255, verbose_name='Nome completo')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('foto_usuario', models.ImageField(blank=True, upload_to='users_photos/', verbose_name='Foto do Usuário')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Ativo')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='Staff')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de entrada')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Receita',
            fields=[
                ('id_receita', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID receita')),
                ('nome_receita', models.CharField(max_length=255, verbose_name='Nome da receita')),
                ('receita', models.TextField(verbose_name='Receita')),
                ('descricao_receita', models.CharField(max_length=255, verbose_name='Descrição da receita')),
                ('ingredientes', models.TextField(verbose_name='Ingredientes')),
                ('foto_receita', models.ImageField(upload_to='receitas_fotos/', verbose_name='Foto da receita')),
                ('prato', models.CharField(choices=[('Q', 'Quente'), ('F', 'Frio')], max_length=255, verbose_name='Prato')),
                ('tipo_prato', models.CharField(choices=[('S', 'Salgado'), ('D', 'Doce'), ('Vga', 'Vegano'), ('Vge', 'Vegetariano')], max_length=255, verbose_name='Tipo do prato')),
                ('aprovado', models.BooleanField(default=False, verbose_name='Aprovar receita')),
                ('data_criacao', models.DateField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
